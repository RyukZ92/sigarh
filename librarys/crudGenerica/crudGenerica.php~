<?php
/* @Descripcion:Libreria CRUD para Manejar las rutinas contra la Base datos (insertar, leer, Actualizar)
 * @Author: Jeison Varilla
 * @Version: 0.1 Beta
 * @Licencia: Libre uso GNU-GPL 
 * @Email:keypherc@gamil.com 
 * @Website:www.keyphercom.com
 * @Modificado por: Miguel Salazar, 2015
 */
class CrudGenerica
{
    protected function _getDbh() 
    {
        return DbPdo::getInstance()->getConn();
    }
public function guardar($tabla, $datos, $condicion, $id)
{
    if ($condicion == null) {
        $interactor = new ArrayIterator ($datos);
        
        $sql="INSERT INTO $tabla (";
        while($interactor->valid()) {
            $sql .= "" . $interactor->key() . ", ";
            $interactor->next();
            }

            $sql = substr($sql, 0, -2);
            $sql .=") VALUES (";
            for($i = 0; $i < $interactor->count(); $i++) {
                $sql .= "?, ";
            }
                $sql = substr($sql, 0, -2);
                $sql.= ");";
            $stm = $this->_getDbh()->prepare($sql);
                   
            $i = 1;
            foreach ($interactor as $valor) {
                $stm->bindValue($i, $valor);
                $i++;   
            }
            
    } else {
        $sql = "UPDATE $tabla SET";
        foreach ($datos as $llave => $valor) {
                $sql .= " $llave = '$valor',";
        }
        $sql = substr($sql, 0, -1); // Elimina la ultima coma
        $where = trim($condicion);
        $sql .= " WHERE $condicion;";
        $stm = $this->_getDbh()->prepare($sql);
    }  
    #echo "<br>";
    #echo $sql;

    $result = $stm->execute();
    if($id != null ) {
        return $this->_getDbh()->lastInsertId($tabla . '_id_seq');  
    } else {
        return  $result;
    }
}
public function contarFilas($tabla, $condicion) 
{
    if ($condicion == null) {
        $sql = "SELECT * FROM $tabla;";
    } 
    else {
         $sql = "SELECT * FROM $tabla WHERE $condicion;";
    }
    #echo $sql;
    $filas = $this->_getDbh()->query($sql)->rowCount();
    return $filas;
}	
public function consultar($tabla, $datos, $condicion, $orden) //Group by
    {	
        $constructor = new ArrayObject();
        if($datos == null) {
                    $sql="SELECT * FROM $tabla";
        }else {
            $sql="SELECT";

            foreach($datos as $valor) {
                $sql .=" $valor, ";
            }

            $sql = substr($sql, 0, -2);
            $sql .=" FROM $tabla";
        }
        if ($orden != null && $condicion == null)
            $sql .=" ORDER BY $orden;";
        elseif ($orden!=null && $condicion != null)
            $sql .=" WHERE $condicion ORDER BY $orden;";
        elseif($condicion != null)
            $sql .=" WHERE $condicion;";
        else
            $sql .=";";
        echo "<br>";
        echo $sql;
        $stm = $this->_getDbh()->query($sql);
        
        while($filas=$stm->fetch(PDO::FETCH_ASSOC)) {
            $constructor->append($filas);
         }
        return $constructor;
    }
}
?>
